/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Colors, htmlTags } from "./types";
export namespace Components {
    interface HsBox {
        "as": htmlTags;
        "attr": string;
        "class": string;
        "styles": string;
    }
    interface HsButton {
        "color": 'primary' | 'secondary';
        "disabled": boolean;
        "icon": string;
        "loading": boolean;
        "size": 'md' | 'lg';
        "type": 'text' | 'icon';
    }
    interface HsHeader {
        "align": 'left' | 'center' | 'right' | 'justify';
        "color": 'primary' | 'neutral' | 'white';
        "type": '1' | '2' | '3' | '4' | '5' | '6';
    }
    interface HsInput {
        "helptext": string;
        "helptexttype": 'error' | 'info';
        "itemid": string;
        "label": string;
        "type": 'text' | 'password' | 'checkbox' | 'radio' | 'textarea';
    }
    interface HsLoading {
        "color": Colors;
        "size": number;
    }
    interface HsParagraph {
        "align": 'left' | 'center' | 'right' | 'justify';
        "color": 'primary' | 'neutral' | 'white';
        "type": 'sm' | 'md' | 'lg';
    }
    interface HsText {
        "align": 'left' | 'center' | 'right' | 'justify';
        "as": "blockquote" | "caption" | "cite" | "code" | "del" | "dfn" | "em" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "i" | "ins" | "kbd" | "label" | "legend" | "mark" | "p" | "pre" | "q" | "s" | "samp" | "small" | "span" | "strong" | "sub" | "sup" | "time" | "u" | "var";
        "class": string;
        "color": "white" | "primary-50" | "primary-100" | "primary-300" | "primary-400" | "primary-500" | "primary-600" | "primary-700" | "primary-900" | "primary-800" | "black" | "neutral-50" | "neutral-100" | "neutral-200" | "neutral-500" | "neutral-700" | "neutral-900" | "success-50" | "success-500" | "danger-50" | "danger-500" | "warning-50" | "warning-500";
        "size": number;
        "weight": '400' | '500' | '700' | 'normal' | 'bold';
    }
}
export interface HsButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLHsButtonElement;
}
declare global {
    interface HTMLHsBoxElement extends Components.HsBox, HTMLStencilElement {
    }
    var HTMLHsBoxElement: {
        prototype: HTMLHsBoxElement;
        new (): HTMLHsBoxElement;
    };
    interface HTMLHsButtonElement extends Components.HsButton, HTMLStencilElement {
    }
    var HTMLHsButtonElement: {
        prototype: HTMLHsButtonElement;
        new (): HTMLHsButtonElement;
    };
    interface HTMLHsHeaderElement extends Components.HsHeader, HTMLStencilElement {
    }
    var HTMLHsHeaderElement: {
        prototype: HTMLHsHeaderElement;
        new (): HTMLHsHeaderElement;
    };
    interface HTMLHsInputElement extends Components.HsInput, HTMLStencilElement {
    }
    var HTMLHsInputElement: {
        prototype: HTMLHsInputElement;
        new (): HTMLHsInputElement;
    };
    interface HTMLHsLoadingElement extends Components.HsLoading, HTMLStencilElement {
    }
    var HTMLHsLoadingElement: {
        prototype: HTMLHsLoadingElement;
        new (): HTMLHsLoadingElement;
    };
    interface HTMLHsParagraphElement extends Components.HsParagraph, HTMLStencilElement {
    }
    var HTMLHsParagraphElement: {
        prototype: HTMLHsParagraphElement;
        new (): HTMLHsParagraphElement;
    };
    interface HTMLHsTextElement extends Components.HsText, HTMLStencilElement {
    }
    var HTMLHsTextElement: {
        prototype: HTMLHsTextElement;
        new (): HTMLHsTextElement;
    };
    interface HTMLElementTagNameMap {
        "hs-box": HTMLHsBoxElement;
        "hs-button": HTMLHsButtonElement;
        "hs-header": HTMLHsHeaderElement;
        "hs-input": HTMLHsInputElement;
        "hs-loading": HTMLHsLoadingElement;
        "hs-paragraph": HTMLHsParagraphElement;
        "hs-text": HTMLHsTextElement;
    }
}
declare namespace LocalJSX {
    interface HsBox {
        "as"?: htmlTags;
        "attr"?: string;
        "class"?: string;
        "styles"?: string;
    }
    interface HsButton {
        "color"?: 'primary' | 'secondary';
        "disabled"?: boolean;
        "icon"?: string;
        "loading"?: boolean;
        "onClicked"?: (event: HsButtonCustomEvent<any>) => void;
        "size"?: 'md' | 'lg';
        "type"?: 'text' | 'icon';
    }
    interface HsHeader {
        "align"?: 'left' | 'center' | 'right' | 'justify';
        "color"?: 'primary' | 'neutral' | 'white';
        "type"?: '1' | '2' | '3' | '4' | '5' | '6';
    }
    interface HsInput {
        "helptext"?: string;
        "helptexttype"?: 'error' | 'info';
        "itemid"?: string;
        "label"?: string;
        "type"?: 'text' | 'password' | 'checkbox' | 'radio' | 'textarea';
    }
    interface HsLoading {
        "color"?: Colors;
        "size"?: number;
    }
    interface HsParagraph {
        "align"?: 'left' | 'center' | 'right' | 'justify';
        "color"?: 'primary' | 'neutral' | 'white';
        "type"?: 'sm' | 'md' | 'lg';
    }
    interface HsText {
        "align"?: 'left' | 'center' | 'right' | 'justify';
        "as"?: "blockquote" | "caption" | "cite" | "code" | "del" | "dfn" | "em" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "i" | "ins" | "kbd" | "label" | "legend" | "mark" | "p" | "pre" | "q" | "s" | "samp" | "small" | "span" | "strong" | "sub" | "sup" | "time" | "u" | "var";
        "class"?: string;
        "color"?: "white" | "primary-50" | "primary-100" | "primary-300" | "primary-400" | "primary-500" | "primary-600" | "primary-700" | "primary-900" | "primary-800" | "black" | "neutral-50" | "neutral-100" | "neutral-200" | "neutral-500" | "neutral-700" | "neutral-900" | "success-50" | "success-500" | "danger-50" | "danger-500" | "warning-50" | "warning-500";
        "size"?: number;
        "weight"?: '400' | '500' | '700' | 'normal' | 'bold';
    }
    interface IntrinsicElements {
        "hs-box": HsBox;
        "hs-button": HsButton;
        "hs-header": HsHeader;
        "hs-input": HsInput;
        "hs-loading": HsLoading;
        "hs-paragraph": HsParagraph;
        "hs-text": HsText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "hs-box": LocalJSX.HsBox & JSXBase.HTMLAttributes<HTMLHsBoxElement>;
            "hs-button": LocalJSX.HsButton & JSXBase.HTMLAttributes<HTMLHsButtonElement>;
            "hs-header": LocalJSX.HsHeader & JSXBase.HTMLAttributes<HTMLHsHeaderElement>;
            "hs-input": LocalJSX.HsInput & JSXBase.HTMLAttributes<HTMLHsInputElement>;
            "hs-loading": LocalJSX.HsLoading & JSXBase.HTMLAttributes<HTMLHsLoadingElement>;
            "hs-paragraph": LocalJSX.HsParagraph & JSXBase.HTMLAttributes<HTMLHsParagraphElement>;
            "hs-text": LocalJSX.HsText & JSXBase.HTMLAttributes<HTMLHsTextElement>;
        }
    }
}
