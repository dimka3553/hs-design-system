/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface HsButton {
        "size": string;
        "variant": string;
    }
    interface HsText {
        "as": "small" | "sub" | "sup" | "blockquote" | "caption" | "cite" | "code" | "del" | "dfn" | "em" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "i" | "ins" | "kbd" | "label" | "legend" | "mark" | "p" | "pre" | "q" | "s" | "samp" | "span" | "strong" | "time" | "u" | "var";
        "size": number;
    }
}
export interface HsButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLHsButtonElement;
}
declare global {
    interface HTMLHsButtonElement extends Components.HsButton, HTMLStencilElement {
    }
    var HTMLHsButtonElement: {
        prototype: HTMLHsButtonElement;
        new (): HTMLHsButtonElement;
    };
    interface HTMLHsTextElement extends Components.HsText, HTMLStencilElement {
    }
    var HTMLHsTextElement: {
        prototype: HTMLHsTextElement;
        new (): HTMLHsTextElement;
    };
    interface HTMLElementTagNameMap {
        "hs-button": HTMLHsButtonElement;
        "hs-text": HTMLHsTextElement;
    }
}
declare namespace LocalJSX {
    interface HsButton {
        "onClicked"?: (event: HsButtonCustomEvent<any>) => void;
        "size"?: string;
        "variant"?: string;
    }
    interface HsText {
        "as"?: "small" | "sub" | "sup" | "blockquote" | "caption" | "cite" | "code" | "del" | "dfn" | "em" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "i" | "ins" | "kbd" | "label" | "legend" | "mark" | "p" | "pre" | "q" | "s" | "samp" | "span" | "strong" | "time" | "u" | "var";
        "size"?: number;
    }
    interface IntrinsicElements {
        "hs-button": HsButton;
        "hs-text": HsText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "hs-button": LocalJSX.HsButton & JSXBase.HTMLAttributes<HTMLHsButtonElement>;
            "hs-text": LocalJSX.HsText & JSXBase.HTMLAttributes<HTMLHsTextElement>;
        }
    }
}
