import { Component, h, Prop, State } from '@stencil/core';

@Component({
  tag: 'hs-callout',
  styleUrl: 'hs-callout.css',
  shadow: false,
})
export class HsCallout {
  @Prop() type: 'info' | 'success' | 'warning' | 'danger' = 'info';
  @Prop() text: string = '';

  @State() show: boolean = true;

  render() {
    let s;
    let Icon;

    if (this.type == 'info') {
      s = 'border-primary-500 bg-primary-50';
      Icon = (
        <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M8 1.5C4.13438 1.5 1 4.63438 1 8.5C1 12.3656 4.13438 15.5 8 15.5C11.8656 15.5 15 12.3656 15 8.5C15 4.63438 11.8656 1.5 8 1.5ZM8.5 11.875C8.5 11.9438 8.44375 12 8.375 12H7.625C7.55625 12 7.5 11.9438 7.5 11.875V7.625C7.5 7.55625 7.55625 7.5 7.625 7.5H8.375C8.44375 7.5 8.5 7.55625 8.5 7.625V11.875ZM8 6.5C7.80374 6.49599 7.61687 6.41522 7.47948 6.275C7.3421 6.13478 7.26515 5.9463 7.26515 5.75C7.26515 5.5537 7.3421 5.36522 7.47948 5.225C7.61687 5.08478 7.80374 5.00401 8 5C8.19626 5.00401 8.38313 5.08478 8.52052 5.225C8.6579 5.36522 8.73485 5.5537 8.73485 5.75C8.73485 5.9463 8.6579 6.13478 8.52052 6.275C8.38313 6.41522 8.19626 6.49599 8 6.5Z"
            fill="#6B60D1"
          />
        </svg>
      );
    } else if (this.type == 'success') {
      s = 'border-success-500 bg-success-50';
      Icon = (
        <svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M7 0.5C3.13438 0.5 0 3.63438 0 7.5C0 11.3656 3.13438 14.5 7 14.5C10.8656 14.5 14 11.3656 14 7.5C14 3.63438 10.8656 0.5 7 0.5ZM10.0234 5.21406L6.73281 9.77656C6.68682 9.84076 6.62619 9.89306 6.55595 9.92914C6.48571 9.96523 6.40787 9.98405 6.32891 9.98405C6.24994 9.98405 6.17211 9.96523 6.10186 9.92914C6.03162 9.89306 5.97099 9.84076 5.925 9.77656L3.97656 7.07656C3.91719 6.99375 3.97656 6.87813 4.07812 6.87813H4.81094C4.97031 6.87813 5.12187 6.95469 5.21562 7.08594L6.32812 8.62969L8.78438 5.22344C8.87813 5.09375 9.02812 5.01562 9.18906 5.01562H9.92188C10.0234 5.01562 10.0828 5.13125 10.0234 5.21406V5.21406Z"
            fill="#5ACF81"
          />
        </svg>
      );
    } else if (this.type == 'warning') {
      s = 'border-warning-500 bg-warning-50';
      Icon = (
        <svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M7 0.5C3.13438 0.5 0 3.63438 0 7.5C0 11.3656 3.13438 14.5 7 14.5C10.8656 14.5 14 11.3656 14 7.5C14 3.63438 10.8656 0.5 7 0.5ZM6.5 4.125C6.5 4.05625 6.55625 4 6.625 4H7.375C7.44375 4 7.5 4.05625 7.5 4.125V8.375C7.5 8.44375 7.44375 8.5 7.375 8.5H6.625C6.55625 8.5 6.5 8.44375 6.5 8.375V4.125ZM7 11C6.80374 10.996 6.61687 10.9152 6.47948 10.775C6.3421 10.6348 6.26515 10.4463 6.26515 10.25C6.26515 10.0537 6.3421 9.86522 6.47948 9.725C6.61687 9.58478 6.80374 9.50401 7 9.5C7.19626 9.50401 7.38313 9.58478 7.52052 9.725C7.6579 9.86522 7.73485 10.0537 7.73485 10.25C7.73485 10.4463 7.6579 10.6348 7.52052 10.775C7.38313 10.9152 7.19626 10.996 7 11Z"
            fill="#F6DE63"
          />
        </svg>
      );
    } else {
      s = 'border-danger-500 bg-danger-50';
      Icon = (
        <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path
            d="M7 0C3.13438 0 0 3.13438 0 7C0 10.8656 3.13438 14 7 14C10.8656 14 14 10.8656 14 7C14 3.13438 10.8656 0 7 0ZM9.58438 9.65938L8.55313 9.65469L7 7.80313L5.44844 9.65312L4.41563 9.65781C4.34688 9.65781 4.29063 9.60312 4.29063 9.53281C4.29063 9.50312 4.30156 9.475 4.32031 9.45156L6.35313 7.02969L4.32031 4.60938C4.30143 4.58647 4.29096 4.5578 4.29063 4.52812C4.29063 4.45937 4.34688 4.40312 4.41563 4.40312L5.44844 4.40781L7 6.25938L8.55156 4.40938L9.58281 4.40469C9.65156 4.40469 9.70781 4.45937 9.70781 4.52969C9.70781 4.55937 9.69688 4.5875 9.67813 4.61094L7.64844 7.03125L9.67969 9.45312C9.69844 9.47656 9.70938 9.50469 9.70938 9.53438C9.70938 9.60313 9.65313 9.65938 9.58438 9.65938Z"
            fill="#EC5857"
          />
        </svg>
      );
    }

    if (!this.show) {
      s = 'hidden';
    }

    return (
      <div class={'flex items-center justify-between border-[1px] gap-2 rounded-[8px] px-3 ' + s}>
        <div class="flex items-center gap-1">
          <div class="min-w-[16px]"> {Icon}</div>

          <p class="text-neutral-700 text-[1rem] p-3">{this.text}</p>
        </div>
        {/* when the div below is clicked, the show is toggled */}
        <div class="w-[20px] h-[20px] cursor-pointer flex items-center justify-center" onClick={() => (this.show = !this.show)}>
          <svg width="10" height="9" viewBox="0 0 10 9" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
              d="M5.70807 4.5L9.29693 0.22207C9.35709 0.150977 9.30651 0.0429688 9.21354 0.0429688H8.12252C8.05826 0.0429688 7.99674 0.0716796 7.95436 0.120898L4.9944 3.64961L2.03444 0.120898C1.99342 0.0716796 1.9319 0.0429688 1.86627 0.0429688H0.775256C0.682287 0.0429688 0.631701 0.150977 0.691858 0.22207L4.28072 4.5L0.691858 8.77793C0.678382 8.79378 0.669737 8.81316 0.666948 8.83377C0.66416 8.85438 0.667345 8.87537 0.676126 8.89422C0.684907 8.91308 0.698915 8.92902 0.716486 8.94016C0.734058 8.95129 0.754455 8.95715 0.775256 8.95703H1.86627C1.93053 8.95703 1.99205 8.92832 2.03444 8.8791L4.9944 5.35039L7.95436 8.8791C7.99537 8.92832 8.0569 8.95703 8.12252 8.95703H9.21354C9.30651 8.95703 9.35709 8.84902 9.29693 8.77793L5.70807 4.5Z"
              fill="#999999"
            />
          </svg>
        </div>
      </div>
    );
  }
}
